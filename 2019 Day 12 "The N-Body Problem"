# --- Day 12: The N-Body Problem ---

pos1 <- c(14,9,14)
pos2 <- c(9,11,6)
pos3 <- c(-6,14,-4)
pos4 <- c(4,-4,-3)

vel1 <- c(0,0,0)
vel2 <- c(0,0,0)
vel3 <- c(0,0,0)
vel4 <- c(0,0,0)
velocities <- list(vel1, vel2, vel3, vel4)
positions <- list(pos1, pos2, pos3, pos4)
pairs <- tibble(left = c(1,1,1,2,2,3), right = c(2,3,4,3,4,4))

round <- 1

while(round <= 1000){
  
  for(i in 1:nrow(pairs)){
    
    if(positions[[pairs$left[i]]][1] > positions[[pairs$right[i]]][1]){
    velocities[[pairs$left[i]]][1] <- velocities[[pairs$left[i]]][1] - 1
    velocities[[pairs$right[i]]][1] <- velocities[[pairs$right[i]]][1] + 1
    }    
    else if(positions[[pairs$left[i]]][1] < positions[[pairs$right[i]]][1]){
      velocities[[pairs$left[i]]][1] <- velocities[[pairs$left[i]]][1] + 1
      velocities[[pairs$right[i]]][1] <- velocities[[pairs$right[i]]][1] - 1
    } 
     if(positions[[pairs$left[i]]][2] > positions[[pairs$right[i]]][2]){
      velocities[[pairs$left[i]]][2] <- velocities[[pairs$left[i]]][2] - 1
      velocities[[pairs$right[i]]][2] <- velocities[[pairs$right[i]]][2] + 1
    }   
    else if(positions[[pairs$left[i]]][2] < positions[[pairs$right[i]]][2]){
      velocities[[pairs$left[i]]][2] <- velocities[[pairs$left[i]]][2] + 1
      velocities[[pairs$right[i]]][2] <- velocities[[pairs$right[i]]][2] - 1
    } 
     if(positions[[pairs$left[i]]][3] > positions[[pairs$right[i]]][3]){
      velocities[[pairs$left[i]]][3] <- velocities[[pairs$left[i]]][3] - 1
      velocities[[pairs$right[i]]][3] <- velocities[[pairs$right[i]]][3] + 1
    }    
    else if(positions[[pairs$left[i]]][3] < positions[[pairs$right[i]]][3]){
      velocities[[pairs$left[i]]][3] <- velocities[[pairs$left[i]]][3] + 1
      velocities[[pairs$right[i]]][3] <- velocities[[pairs$right[i]]][3] - 1
    } 
   
  }    
    
  
  
  positions[[1]] <- positions[[1]] + velocities[[1]]
  positions[[2]] <- positions[[2]] + velocities[[2]]
  positions[[3]] <- positions[[3]] + velocities[[3]]
  positions[[4]] <- positions[[4]] + velocities[[4]]
  
  round <- round + 1
}


sum(abs(positions[[1]])) * sum(abs(velocities[[1]])) + sum(abs(positions[[2]]))  * sum(abs(velocities[[2]])) + sum(abs(velocities[[3]])) * sum(abs(positions[[3]])) + sum(abs(positions[[4]])) * sum(abs(velocities[[4]]))


#PART 2:

#RESET EVERYTHING AND CALCULATE PERIODS FOR X, Y, AND Z. THEN CALCULATE THE LCM FOR THE FINAL ANSWER 

pos1 <- c(14,9,14)
pos2 <- c(9,11,6)
pos3 <- c(-6,14,-4)
pos4 <- c(4,-4,-3)

vel1 <- c(0,0,0)
vel2 <- c(0,0,0)
vel3 <- c(0,0,0)
vel4 <- c(0,0,0)
velocities <- list(vel1, vel2, vel3, vel4)
positions <- list(pos1, pos2, pos3, pos4)
pairs <- tibble(left = c(1,1,1,2,2,3), right = c(2,3,4,3,4,4))

round <- 1
cache <- list(unlist(positions)[c(2,5,8,11)])

repeat{
  
  for(i in 1:nrow(pairs)){
    
    if(positions[[pairs$left[i]]][1] > positions[[pairs$right[i]]][1]){
      velocities[[pairs$left[i]]][1] <- velocities[[pairs$left[i]]][1] - 1
      velocities[[pairs$right[i]]][1] <- velocities[[pairs$right[i]]][1] + 1
    }    
    else if(positions[[pairs$left[i]]][1] < positions[[pairs$right[i]]][1]){
      velocities[[pairs$left[i]]][1] <- velocities[[pairs$left[i]]][1] + 1
      velocities[[pairs$right[i]]][1] <- velocities[[pairs$right[i]]][1] - 1
    } 
    if(positions[[pairs$left[i]]][2] > positions[[pairs$right[i]]][2]){
      velocities[[pairs$left[i]]][2] <- velocities[[pairs$left[i]]][2] - 1
      velocities[[pairs$right[i]]][2] <- velocities[[pairs$right[i]]][2] + 1
    }   
    else if(positions[[pairs$left[i]]][2] < positions[[pairs$right[i]]][2]){
      velocities[[pairs$left[i]]][2] <- velocities[[pairs$left[i]]][2] + 1
      velocities[[pairs$right[i]]][2] <- velocities[[pairs$right[i]]][2] - 1
    } 
    if(positions[[pairs$left[i]]][3] > positions[[pairs$right[i]]][3]){
      velocities[[pairs$left[i]]][3] <- velocities[[pairs$left[i]]][3] - 1
      velocities[[pairs$right[i]]][3] <- velocities[[pairs$right[i]]][3] + 1
    }    
    else if(positions[[pairs$left[i]]][3] < positions[[pairs$right[i]]][3]){
      velocities[[pairs$left[i]]][3] <- velocities[[pairs$left[i]]][3] + 1
      velocities[[pairs$right[i]]][3] <- velocities[[pairs$right[i]]][3] - 1
    } 
    
  }    
  
  
  
  positions[[1]] <- positions[[1]] + velocities[[1]]
  positions[[2]] <- positions[[2]] + velocities[[2]]
  positions[[3]] <- positions[[3]] + velocities[[3]]
  positions[[4]] <- positions[[4]] + velocities[[4]]
  
  round <- round + 1
  print(round)
  cache[[round]] <- unlist(positions)[c(2,5,8,11)]
  if(identical(cache[[round]], cache[[1]])) break 
}

#X PERIOD IS 161428
#Y PERIOD IS 231614
#Z PERIOD IS 60424
lcm(161428,231614,60424) # 282399002133976

#NOTE: for x make positions be 1,4,7,10 for y 2,5,8,11 for z 3,6,9,12 and run the loop which will break, eventually 
